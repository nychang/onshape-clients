"use strict";
/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var BTAppViewParams = /** @class */ (function () {
    function BTAppViewParams() {
    }
    BTAppViewParams.getAttributeTypeMap = function () {
        return BTAppViewParams.attributeTypeMap;
    };
    BTAppViewParams.discriminator = undefined;
    BTAppViewParams.attributeTypeMap = [
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "Array<number>"
        },
        {
            "name": "cropView",
            "baseName": "cropView",
            "type": "boolean"
        },
        {
            "name": "includeHiddenInstances",
            "baseName": "includeHiddenInstances",
            "type": "boolean"
        },
        {
            "name": "viewScale",
            "baseName": "viewScale",
            "type": "number"
        },
        {
            "name": "showTangentLines",
            "baseName": "showTangentLines",
            "type": "boolean"
        },
        {
            "name": "computeIntersection",
            "baseName": "computeIntersection",
            "type": "boolean"
        },
        {
            "name": "isBrokenOutSection",
            "baseName": "isBrokenOutSection",
            "type": "boolean"
        },
        {
            "name": "isCropView",
            "baseName": "isCropView",
            "type": "boolean"
        },
        {
            "name": "hiddenLines",
            "baseName": "hiddenLines",
            "type": "BTAppViewParams.HiddenLinesEnum"
        },
        {
            "name": "modificationId",
            "baseName": "modificationId",
            "type": "string"
        },
        {
            "name": "perspective",
            "baseName": "perspective",
            "type": "boolean"
        },
        {
            "name": "projectionAngle",
            "baseName": "projectionAngle",
            "type": "string"
        },
        {
            "name": "showThreads",
            "baseName": "showThreads",
            "type": "boolean"
        },
        {
            "name": "isPartialSection",
            "baseName": "isPartialSection",
            "type": "boolean"
        },
        {
            "name": "brokenOutPointNumbers",
            "baseName": "brokenOutPointNumbers",
            "type": "Array<number>"
        },
        {
            "name": "brokenOutEndConditions",
            "baseName": "brokenOutEndConditions",
            "type": "{ [key: string]: BTBrokenOutEndCondition; }"
        },
        {
            "name": "brokenOutBBoxes",
            "baseName": "brokenOutBBoxes",
            "type": "Array<number>"
        },
        {
            "name": "brokenOutBBoxesMap",
            "baseName": "brokenOutBBoxesMap",
            "type": "{ [key: string]: BTBoundingBox; }"
        },
        {
            "name": "includeSurfaces",
            "baseName": "includeSurfaces",
            "type": "boolean"
        },
        {
            "name": "isSurface",
            "baseName": "isSurface",
            "type": "boolean"
        },
        {
            "name": "depthSectionEndCondition",
            "baseName": "depthSectionEndCondition",
            "type": "BTBrokenOutEndCondition"
        },
        {
            "name": "displayStateId",
            "baseName": "displayStateId",
            "type": "string"
        },
        {
            "name": "transactionId",
            "baseName": "transactionId",
            "type": "string"
        },
        {
            "name": "parentChangeId",
            "baseName": "parentChangeId",
            "type": "string"
        },
        {
            "name": "modelReferenceId",
            "baseName": "modelReferenceId",
            "type": "string"
        },
        {
            "name": "viewMatrix",
            "baseName": "viewMatrix",
            "type": "Array<number>"
        },
        {
            "name": "viewDirection",
            "baseName": "viewDirection",
            "type": "Array<number>"
        },
        {
            "name": "cutPoint",
            "baseName": "cutPoint",
            "type": "Array<number>"
        },
        {
            "name": "offsetSectionPoints",
            "baseName": "offsetSectionPoints",
            "type": "Array<number>"
        },
        {
            "name": "brokenOutSection",
            "baseName": "brokenOutSection",
            "type": "boolean"
        },
        {
            "name": "bomReferenceId",
            "baseName": "bomReferenceId",
            "type": "string"
        },
        {
            "name": "occurrenceOrPartIdToGeometryProperties",
            "baseName": "occurrenceOrPartIdToGeometryProperties",
            "type": "{ [key: string]: { [key: string]: string; }; }"
        }
    ];
    return BTAppViewParams;
}());
exports.BTAppViewParams = BTAppViewParams;
(function (BTAppViewParams) {
    var HiddenLinesEnum;
    (function (HiddenLinesEnum) {
        HiddenLinesEnum[HiddenLinesEnum["DRAFTING"] = 'DRAFTING'] = "DRAFTING";
        HiddenLinesEnum[HiddenLinesEnum["EXCLUDED"] = 'EXCLUDED'] = "EXCLUDED";
        HiddenLinesEnum[HiddenLinesEnum["MARKED"] = 'MARKED'] = "MARKED";
    })(HiddenLinesEnum = BTAppViewParams.HiddenLinesEnum || (BTAppViewParams.HiddenLinesEnum = {}));
})(BTAppViewParams = exports.BTAppViewParams || (exports.BTAppViewParams = {}));
exports.BTAppViewParams = BTAppViewParams;
