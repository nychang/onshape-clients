"use strict";
/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var Schema = /** @class */ (function () {
    function Schema() {
    }
    Schema.getAttributeTypeMap = function () {
        return Schema.attributeTypeMap;
    };
    Schema.discriminator = undefined;
    Schema.attributeTypeMap = [
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "multipleOf",
            "baseName": "multipleOf",
            "type": "number"
        },
        {
            "name": "maximum",
            "baseName": "maximum",
            "type": "number"
        },
        {
            "name": "exclusiveMaximum",
            "baseName": "exclusiveMaximum",
            "type": "boolean"
        },
        {
            "name": "minimum",
            "baseName": "minimum",
            "type": "number"
        },
        {
            "name": "exclusiveMinimum",
            "baseName": "exclusiveMinimum",
            "type": "boolean"
        },
        {
            "name": "maxLength",
            "baseName": "maxLength",
            "type": "number"
        },
        {
            "name": "minLength",
            "baseName": "minLength",
            "type": "number"
        },
        {
            "name": "pattern",
            "baseName": "pattern",
            "type": "string"
        },
        {
            "name": "maxItems",
            "baseName": "maxItems",
            "type": "number"
        },
        {
            "name": "minItems",
            "baseName": "minItems",
            "type": "number"
        },
        {
            "name": "uniqueItems",
            "baseName": "uniqueItems",
            "type": "boolean"
        },
        {
            "name": "maxProperties",
            "baseName": "maxProperties",
            "type": "number"
        },
        {
            "name": "minProperties",
            "baseName": "minProperties",
            "type": "number"
        },
        {
            "name": "required",
            "baseName": "required",
            "type": "Array<string>"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        },
        {
            "name": "not",
            "baseName": "not",
            "type": "Schema"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "{ [key: string]: Schema; }"
        },
        {
            "name": "_default",
            "baseName": "default",
            "type": "any"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "format",
            "baseName": "format",
            "type": "string"
        },
        {
            "name": "get$ref",
            "baseName": "get$ref",
            "type": "string"
        },
        {
            "name": "nullable",
            "baseName": "nullable",
            "type": "boolean"
        },
        {
            "name": "readOnly",
            "baseName": "readOnly",
            "type": "boolean"
        },
        {
            "name": "writeOnly",
            "baseName": "writeOnly",
            "type": "boolean"
        },
        {
            "name": "externalDocs",
            "baseName": "externalDocs",
            "type": "ExternalDocumentation"
        },
        {
            "name": "deprecated",
            "baseName": "deprecated",
            "type": "boolean"
        },
        {
            "name": "xml",
            "baseName": "xml",
            "type": "XML"
        },
        {
            "name": "extensions",
            "baseName": "extensions",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "discriminator",
            "baseName": "discriminator",
            "type": "Discriminator"
        },
        {
            "name": "_enum",
            "baseName": "enum",
            "type": "Array<any>"
        }
    ];
    return Schema;
}());
exports.Schema = Schema;
