/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class JsonNode {
    'array'?: boolean;
    '_null'?: boolean;
    '_float'?: boolean;
    'object'?: boolean;
    'nodeType'?: JsonNode.NodeTypeEnum;
    'textual'?: boolean;
    'valueNode'?: boolean;
    'containerNode'?: boolean;
    'missingNode'?: boolean;
    'pojo'?: boolean;
    'number'?: boolean;
    'integralNumber'?: boolean;
    'floatingPointNumber'?: boolean;
    '_short'?: boolean;
    '_int'?: boolean;
    '_long'?: boolean;
    '_double'?: boolean;
    'bigDecimal'?: boolean;
    'bigInteger'?: boolean;
    '_boolean'?: boolean;
    'binary'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "array",
            "baseName": "array",
            "type": "boolean"
        },
        {
            "name": "_null",
            "baseName": "null",
            "type": "boolean"
        },
        {
            "name": "_float",
            "baseName": "float",
            "type": "boolean"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "boolean"
        },
        {
            "name": "nodeType",
            "baseName": "nodeType",
            "type": "JsonNode.NodeTypeEnum"
        },
        {
            "name": "textual",
            "baseName": "textual",
            "type": "boolean"
        },
        {
            "name": "valueNode",
            "baseName": "valueNode",
            "type": "boolean"
        },
        {
            "name": "containerNode",
            "baseName": "containerNode",
            "type": "boolean"
        },
        {
            "name": "missingNode",
            "baseName": "missingNode",
            "type": "boolean"
        },
        {
            "name": "pojo",
            "baseName": "pojo",
            "type": "boolean"
        },
        {
            "name": "number",
            "baseName": "number",
            "type": "boolean"
        },
        {
            "name": "integralNumber",
            "baseName": "integralNumber",
            "type": "boolean"
        },
        {
            "name": "floatingPointNumber",
            "baseName": "floatingPointNumber",
            "type": "boolean"
        },
        {
            "name": "_short",
            "baseName": "short",
            "type": "boolean"
        },
        {
            "name": "_int",
            "baseName": "int",
            "type": "boolean"
        },
        {
            "name": "_long",
            "baseName": "long",
            "type": "boolean"
        },
        {
            "name": "_double",
            "baseName": "double",
            "type": "boolean"
        },
        {
            "name": "bigDecimal",
            "baseName": "bigDecimal",
            "type": "boolean"
        },
        {
            "name": "bigInteger",
            "baseName": "bigInteger",
            "type": "boolean"
        },
        {
            "name": "_boolean",
            "baseName": "boolean",
            "type": "boolean"
        },
        {
            "name": "binary",
            "baseName": "binary",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return JsonNode.attributeTypeMap;
    }
}

export namespace JsonNode {
    export enum NodeTypeEnum {
        ARRAY = <any> 'ARRAY',
        BINARY = <any> 'BINARY',
        BOOLEAN = <any> 'BOOLEAN',
        MISSING = <any> 'MISSING',
        NULL = <any> 'NULL',
        NUMBER = <any> 'NUMBER',
        OBJECT = <any> 'OBJECT',
        POJO = <any> 'POJO',
        STRING = <any> 'STRING'
    }
}
