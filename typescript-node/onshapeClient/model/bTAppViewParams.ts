/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BTBoundingBox } from './bTBoundingBox';
import { BTBrokenOutEndCondition } from './bTBrokenOutEndCondition';

export class BTAppViewParams {
    'parameters'?: Array<number>;
    'cropView'?: boolean;
    'includeHiddenInstances'?: boolean;
    'viewScale'?: number;
    'showTangentLines'?: boolean;
    'computeIntersection'?: boolean;
    'isBrokenOutSection'?: boolean;
    'isCropView'?: boolean;
    'hiddenLines'?: BTAppViewParams.HiddenLinesEnum;
    'modificationId'?: string;
    'perspective'?: boolean;
    'projectionAngle'?: string;
    'showThreads'?: boolean;
    'isPartialSection'?: boolean;
    'brokenOutPointNumbers'?: Array<number>;
    'brokenOutEndConditions'?: { [key: string]: BTBrokenOutEndCondition; };
    'brokenOutBBoxes'?: Array<number>;
    'brokenOutBBoxesMap'?: { [key: string]: BTBoundingBox; };
    'includeSurfaces'?: boolean;
    'isSurface'?: boolean;
    'depthSectionEndCondition'?: BTBrokenOutEndCondition;
    'displayStateId'?: string;
    'transactionId'?: string;
    'parentChangeId'?: string;
    'modelReferenceId'?: string;
    'viewMatrix'?: Array<number>;
    'viewDirection'?: Array<number>;
    'cutPoint'?: Array<number>;
    'offsetSectionPoints'?: Array<number>;
    'brokenOutSection'?: boolean;
    'bomReferenceId'?: string;
    'occurrenceOrPartIdToGeometryProperties'?: { [key: string]: { [key: string]: string; }; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "Array<number>"
        },
        {
            "name": "cropView",
            "baseName": "cropView",
            "type": "boolean"
        },
        {
            "name": "includeHiddenInstances",
            "baseName": "includeHiddenInstances",
            "type": "boolean"
        },
        {
            "name": "viewScale",
            "baseName": "viewScale",
            "type": "number"
        },
        {
            "name": "showTangentLines",
            "baseName": "showTangentLines",
            "type": "boolean"
        },
        {
            "name": "computeIntersection",
            "baseName": "computeIntersection",
            "type": "boolean"
        },
        {
            "name": "isBrokenOutSection",
            "baseName": "isBrokenOutSection",
            "type": "boolean"
        },
        {
            "name": "isCropView",
            "baseName": "isCropView",
            "type": "boolean"
        },
        {
            "name": "hiddenLines",
            "baseName": "hiddenLines",
            "type": "BTAppViewParams.HiddenLinesEnum"
        },
        {
            "name": "modificationId",
            "baseName": "modificationId",
            "type": "string"
        },
        {
            "name": "perspective",
            "baseName": "perspective",
            "type": "boolean"
        },
        {
            "name": "projectionAngle",
            "baseName": "projectionAngle",
            "type": "string"
        },
        {
            "name": "showThreads",
            "baseName": "showThreads",
            "type": "boolean"
        },
        {
            "name": "isPartialSection",
            "baseName": "isPartialSection",
            "type": "boolean"
        },
        {
            "name": "brokenOutPointNumbers",
            "baseName": "brokenOutPointNumbers",
            "type": "Array<number>"
        },
        {
            "name": "brokenOutEndConditions",
            "baseName": "brokenOutEndConditions",
            "type": "{ [key: string]: BTBrokenOutEndCondition; }"
        },
        {
            "name": "brokenOutBBoxes",
            "baseName": "brokenOutBBoxes",
            "type": "Array<number>"
        },
        {
            "name": "brokenOutBBoxesMap",
            "baseName": "brokenOutBBoxesMap",
            "type": "{ [key: string]: BTBoundingBox; }"
        },
        {
            "name": "includeSurfaces",
            "baseName": "includeSurfaces",
            "type": "boolean"
        },
        {
            "name": "isSurface",
            "baseName": "isSurface",
            "type": "boolean"
        },
        {
            "name": "depthSectionEndCondition",
            "baseName": "depthSectionEndCondition",
            "type": "BTBrokenOutEndCondition"
        },
        {
            "name": "displayStateId",
            "baseName": "displayStateId",
            "type": "string"
        },
        {
            "name": "transactionId",
            "baseName": "transactionId",
            "type": "string"
        },
        {
            "name": "parentChangeId",
            "baseName": "parentChangeId",
            "type": "string"
        },
        {
            "name": "modelReferenceId",
            "baseName": "modelReferenceId",
            "type": "string"
        },
        {
            "name": "viewMatrix",
            "baseName": "viewMatrix",
            "type": "Array<number>"
        },
        {
            "name": "viewDirection",
            "baseName": "viewDirection",
            "type": "Array<number>"
        },
        {
            "name": "cutPoint",
            "baseName": "cutPoint",
            "type": "Array<number>"
        },
        {
            "name": "offsetSectionPoints",
            "baseName": "offsetSectionPoints",
            "type": "Array<number>"
        },
        {
            "name": "brokenOutSection",
            "baseName": "brokenOutSection",
            "type": "boolean"
        },
        {
            "name": "bomReferenceId",
            "baseName": "bomReferenceId",
            "type": "string"
        },
        {
            "name": "occurrenceOrPartIdToGeometryProperties",
            "baseName": "occurrenceOrPartIdToGeometryProperties",
            "type": "{ [key: string]: { [key: string]: string; }; }"
        }    ];

    static getAttributeTypeMap() {
        return BTAppViewParams.attributeTypeMap;
    }
}

export namespace BTAppViewParams {
    export enum HiddenLinesEnum {
        DRAFTING = <any> 'DRAFTING',
        EXCLUDED = <any> 'EXCLUDED',
        MARKED = <any> 'MARKED'
    }
}
