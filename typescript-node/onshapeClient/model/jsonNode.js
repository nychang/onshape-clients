"use strict";
/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var JsonNode = /** @class */ (function () {
    function JsonNode() {
    }
    JsonNode.getAttributeTypeMap = function () {
        return JsonNode.attributeTypeMap;
    };
    JsonNode.discriminator = undefined;
    JsonNode.attributeTypeMap = [
        {
            "name": "array",
            "baseName": "array",
            "type": "boolean"
        },
        {
            "name": "_null",
            "baseName": "null",
            "type": "boolean"
        },
        {
            "name": "_float",
            "baseName": "float",
            "type": "boolean"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "boolean"
        },
        {
            "name": "nodeType",
            "baseName": "nodeType",
            "type": "JsonNode.NodeTypeEnum"
        },
        {
            "name": "textual",
            "baseName": "textual",
            "type": "boolean"
        },
        {
            "name": "valueNode",
            "baseName": "valueNode",
            "type": "boolean"
        },
        {
            "name": "containerNode",
            "baseName": "containerNode",
            "type": "boolean"
        },
        {
            "name": "missingNode",
            "baseName": "missingNode",
            "type": "boolean"
        },
        {
            "name": "pojo",
            "baseName": "pojo",
            "type": "boolean"
        },
        {
            "name": "number",
            "baseName": "number",
            "type": "boolean"
        },
        {
            "name": "integralNumber",
            "baseName": "integralNumber",
            "type": "boolean"
        },
        {
            "name": "floatingPointNumber",
            "baseName": "floatingPointNumber",
            "type": "boolean"
        },
        {
            "name": "_short",
            "baseName": "short",
            "type": "boolean"
        },
        {
            "name": "_int",
            "baseName": "int",
            "type": "boolean"
        },
        {
            "name": "_long",
            "baseName": "long",
            "type": "boolean"
        },
        {
            "name": "_double",
            "baseName": "double",
            "type": "boolean"
        },
        {
            "name": "bigDecimal",
            "baseName": "bigDecimal",
            "type": "boolean"
        },
        {
            "name": "bigInteger",
            "baseName": "bigInteger",
            "type": "boolean"
        },
        {
            "name": "_boolean",
            "baseName": "boolean",
            "type": "boolean"
        },
        {
            "name": "binary",
            "baseName": "binary",
            "type": "boolean"
        }
    ];
    return JsonNode;
}());
exports.JsonNode = JsonNode;
(function (JsonNode) {
    var NodeTypeEnum;
    (function (NodeTypeEnum) {
        NodeTypeEnum[NodeTypeEnum["ARRAY"] = 'ARRAY'] = "ARRAY";
        NodeTypeEnum[NodeTypeEnum["BINARY"] = 'BINARY'] = "BINARY";
        NodeTypeEnum[NodeTypeEnum["BOOLEAN"] = 'BOOLEAN'] = "BOOLEAN";
        NodeTypeEnum[NodeTypeEnum["MISSING"] = 'MISSING'] = "MISSING";
        NodeTypeEnum[NodeTypeEnum["NULL"] = 'NULL'] = "NULL";
        NodeTypeEnum[NodeTypeEnum["NUMBER"] = 'NUMBER'] = "NUMBER";
        NodeTypeEnum[NodeTypeEnum["OBJECT"] = 'OBJECT'] = "OBJECT";
        NodeTypeEnum[NodeTypeEnum["POJO"] = 'POJO'] = "POJO";
        NodeTypeEnum[NodeTypeEnum["STRING"] = 'STRING'] = "STRING";
    })(NodeTypeEnum = JsonNode.NodeTypeEnum || (JsonNode.NodeTypeEnum = {}));
})(JsonNode = exports.JsonNode || (exports.JsonNode = {}));
exports.JsonNode = JsonNode;
