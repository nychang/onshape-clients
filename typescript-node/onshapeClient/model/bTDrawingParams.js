"use strict";
/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var BTDrawingParams = /** @class */ (function () {
    function BTDrawingParams() {
    }
    BTDrawingParams.getAttributeTypeMap = function () {
        return BTDrawingParams.attributeTypeMap;
    };
    BTDrawingParams.discriminator = undefined;
    BTDrawingParams.attributeTypeMap = [
        {
            "name": "location",
            "baseName": "location",
            "type": "BTElementLocationParams"
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "string"
        },
        {
            "name": "language",
            "baseName": "language",
            "type": "string"
        },
        {
            "name": "decimalSeparator",
            "baseName": "decimalSeparator",
            "type": "string"
        },
        {
            "name": "revision",
            "baseName": "revision",
            "type": "string"
        },
        {
            "name": "partNumber",
            "baseName": "partNumber",
            "type": "string"
        },
        {
            "name": "units",
            "baseName": "units",
            "type": "string"
        },
        {
            "name": "computeIntersection",
            "baseName": "computeIntersection",
            "type": "boolean"
        },
        {
            "name": "documentMicroversionId",
            "baseName": "documentMicroversionId",
            "type": "string"
        },
        {
            "name": "hiddenLines",
            "baseName": "hiddenLines",
            "type": "BTDrawingParams.HiddenLinesEnum"
        },
        {
            "name": "includeSurfaces",
            "baseName": "includeSurfaces",
            "type": "boolean"
        },
        {
            "name": "isSurface",
            "baseName": "isSurface",
            "type": "boolean"
        },
        {
            "name": "pureSketch",
            "baseName": "pureSketch",
            "type": "boolean"
        },
        {
            "name": "isSketchOnly",
            "baseName": "isSketchOnly",
            "type": "boolean"
        },
        {
            "name": "workspaceId",
            "baseName": "workspaceId",
            "type": "string"
        },
        {
            "name": "elementId",
            "baseName": "elementId",
            "type": "string"
        },
        {
            "name": "partQuery",
            "baseName": "partQuery",
            "type": "string"
        },
        {
            "name": "partId",
            "baseName": "partId",
            "type": "string"
        },
        {
            "name": "externalDocumentVersionId",
            "baseName": "externalDocumentVersionId",
            "type": "string"
        },
        {
            "name": "elementConfiguration",
            "baseName": "elementConfiguration",
            "type": "string"
        },
        {
            "name": "templateDocumentId",
            "baseName": "templateDocumentId",
            "type": "string"
        },
        {
            "name": "templateWorkspaceId",
            "baseName": "templateWorkspaceId",
            "type": "string"
        },
        {
            "name": "templateName",
            "baseName": "templateName",
            "type": "string"
        },
        {
            "name": "templateArgs",
            "baseName": "templateArgs",
            "type": "Array<string>"
        },
        {
            "name": "templateElementId",
            "baseName": "templateElementId",
            "type": "string"
        },
        {
            "name": "drawingName",
            "baseName": "drawingName",
            "type": "string"
        },
        {
            "name": "projection",
            "baseName": "projection",
            "type": "string"
        },
        {
            "name": "standard",
            "baseName": "standard",
            "type": "string"
        },
        {
            "name": "border",
            "baseName": "border",
            "type": "boolean"
        },
        {
            "name": "titleblock",
            "baseName": "titleblock",
            "type": "boolean"
        },
        {
            "name": "numberHorizontalZones",
            "baseName": "numberHorizontalZones",
            "type": "number"
        },
        {
            "name": "numberVerticalZones",
            "baseName": "numberVerticalZones",
            "type": "number"
        },
        {
            "name": "startZones",
            "baseName": "startZones",
            "type": "string"
        },
        {
            "name": "externalDocumentId",
            "baseName": "externalDocumentId",
            "type": "string"
        },
        {
            "name": "documentId",
            "baseName": "documentId",
            "type": "string"
        },
        {
            "name": "sketchId",
            "baseName": "sketchId",
            "type": "string"
        },
        {
            "name": "sketchIds",
            "baseName": "sketchIds",
            "type": "Array<string>"
        },
        {
            "name": "elementMicroversionId",
            "baseName": "elementMicroversionId",
            "type": "string"
        },
        {
            "name": "views",
            "baseName": "views",
            "type": "string"
        },
        {
            "name": "templateVersionId",
            "baseName": "templateVersionId",
            "type": "string"
        },
        {
            "name": "modelType",
            "baseName": "modelType",
            "type": "string"
        }
    ];
    return BTDrawingParams;
}());
exports.BTDrawingParams = BTDrawingParams;
(function (BTDrawingParams) {
    var HiddenLinesEnum;
    (function (HiddenLinesEnum) {
        HiddenLinesEnum[HiddenLinesEnum["DRAFTING"] = 'DRAFTING'] = "DRAFTING";
        HiddenLinesEnum[HiddenLinesEnum["EXCLUDED"] = 'EXCLUDED'] = "EXCLUDED";
        HiddenLinesEnum[HiddenLinesEnum["MARKED"] = 'MARKED'] = "MARKED";
    })(HiddenLinesEnum = BTDrawingParams.HiddenLinesEnum || (BTDrawingParams.HiddenLinesEnum = {}));
})(BTDrawingParams = exports.BTDrawingParams || (exports.BTDrawingParams = {}));
exports.BTDrawingParams = BTDrawingParams;
