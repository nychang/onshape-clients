/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BTConnection } from './bTConnection';
import { BTDocumentWithVersionAndElementId } from './bTDocumentWithVersionAndElementId';
import { BTInsertionLocation } from './bTInsertionLocation';
import { BTMicroversionId } from './bTMicroversionId';
import { BTNodeReference } from './bTNodeReference';
import { BTObjectId } from './bTObjectId';
import { BTPModuleId } from './bTPModuleId';
import { BTRevisionCustomData } from './bTRevisionCustomData';

export class BTMImport {
    'elementImport'?: boolean;
    '_import'?: BTPModuleId;
    'importedExternalDocumentId'?: string;
    'importedMicroversionId'?: BTMicroversionId;
    'externalDocumentWithVersionAndElementId'?: BTDocumentWithVersionAndElementId;
    'importedWorkspaceElementId'?: string;
    'revisionData'?: BTRevisionCustomData;
    'namespaceFieldIndex'?: number;
    'namespace'?: string;
    'nodeId'?: string;
    'combinedNamespace'?: string;
    'forExport'?: boolean;
    'importMicroversion'?: string;
    'path'?: string;
    'version'?: string;
    'changeableChildFieldIndices'?: Array<number>;
    'childNodes'?: { [key: string]: BTNodeReference; };
    'hasUserCode'?: boolean;
    'childLocations'?: { [key: string]: BTInsertionLocation; };
    'sourceParseTreeNodes'?: { [key: string]: Array<BTNodeReference>; };
    'childMapIndices'?: Array<number>;
    'atomicChildIndices'?: Array<number>;
    'nodeIdRaw'?: BTObjectId;
    'firstChildField'?: number;
    'childListIndices'?: Array<number>;
    'typeId'?: number;
    'connectionSource'?: BTConnection;
    'exportTypeName'?: string;
    'unknownClass'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "elementImport",
            "baseName": "elementImport",
            "type": "boolean"
        },
        {
            "name": "_import",
            "baseName": "import",
            "type": "BTPModuleId"
        },
        {
            "name": "importedExternalDocumentId",
            "baseName": "importedExternalDocumentId",
            "type": "string"
        },
        {
            "name": "importedMicroversionId",
            "baseName": "importedMicroversionId",
            "type": "BTMicroversionId"
        },
        {
            "name": "externalDocumentWithVersionAndElementId",
            "baseName": "externalDocumentWithVersionAndElementId",
            "type": "BTDocumentWithVersionAndElementId"
        },
        {
            "name": "importedWorkspaceElementId",
            "baseName": "importedWorkspaceElementId",
            "type": "string"
        },
        {
            "name": "revisionData",
            "baseName": "revisionData",
            "type": "BTRevisionCustomData"
        },
        {
            "name": "namespaceFieldIndex",
            "baseName": "namespaceFieldIndex",
            "type": "number"
        },
        {
            "name": "namespace",
            "baseName": "namespace",
            "type": "string"
        },
        {
            "name": "nodeId",
            "baseName": "nodeId",
            "type": "string"
        },
        {
            "name": "combinedNamespace",
            "baseName": "combinedNamespace",
            "type": "string"
        },
        {
            "name": "forExport",
            "baseName": "forExport",
            "type": "boolean"
        },
        {
            "name": "importMicroversion",
            "baseName": "importMicroversion",
            "type": "string"
        },
        {
            "name": "path",
            "baseName": "path",
            "type": "string"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "string"
        },
        {
            "name": "changeableChildFieldIndices",
            "baseName": "changeableChildFieldIndices",
            "type": "Array<number>"
        },
        {
            "name": "childNodes",
            "baseName": "childNodes",
            "type": "{ [key: string]: BTNodeReference; }"
        },
        {
            "name": "hasUserCode",
            "baseName": "hasUserCode",
            "type": "boolean"
        },
        {
            "name": "childLocations",
            "baseName": "childLocations",
            "type": "{ [key: string]: BTInsertionLocation; }"
        },
        {
            "name": "sourceParseTreeNodes",
            "baseName": "sourceParseTreeNodes",
            "type": "{ [key: string]: Array<BTNodeReference>; }"
        },
        {
            "name": "childMapIndices",
            "baseName": "childMapIndices",
            "type": "Array<number>"
        },
        {
            "name": "atomicChildIndices",
            "baseName": "atomicChildIndices",
            "type": "Array<number>"
        },
        {
            "name": "nodeIdRaw",
            "baseName": "nodeIdRaw",
            "type": "BTObjectId"
        },
        {
            "name": "firstChildField",
            "baseName": "firstChildField",
            "type": "number"
        },
        {
            "name": "childListIndices",
            "baseName": "childListIndices",
            "type": "Array<number>"
        },
        {
            "name": "typeId",
            "baseName": "typeId",
            "type": "number"
        },
        {
            "name": "connectionSource",
            "baseName": "connectionSource",
            "type": "BTConnection"
        },
        {
            "name": "exportTypeName",
            "baseName": "exportTypeName",
            "type": "string"
        },
        {
            "name": "unknownClass",
            "baseName": "unknownClass",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return BTMImport.attributeTypeMap;
    }
}

