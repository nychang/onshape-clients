/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class BTImportForeignDataParams {
    'size'?: number;
    'ownerId'?: string;
    'ownerType'?: BTImportForeignDataParams.OwnerTypeEnum;
    'filename'?: string;
    'mediaType'?: string;
    'documentId'?: string;
    'fileFormat'?: BTImportForeignDataParams.FileFormatEnum;
    'publicDocument'?: boolean;
    'notifyUser'?: boolean;
    'unit'?: string;
    'splitAssembliesIntoMultipleDocuments'?: boolean;
    'flattenAssemblies'?: boolean;
    'getyAxisIsUp'?: boolean;
    'allowFaultyParts'?: boolean;
    'projectId'?: string;
    'parentId'?: string;
    'foreignId'?: string;
    'uploadId'?: string;
    'originalForeignId'?: string;
    'importWithinDocument'?: boolean;
    'blobElementId'?: string;
    'blobMicroversionId'?: string;
    'specifyUnits'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "size",
            "baseName": "size",
            "type": "number"
        },
        {
            "name": "ownerId",
            "baseName": "ownerId",
            "type": "string"
        },
        {
            "name": "ownerType",
            "baseName": "ownerType",
            "type": "BTImportForeignDataParams.OwnerTypeEnum"
        },
        {
            "name": "filename",
            "baseName": "filename",
            "type": "string"
        },
        {
            "name": "mediaType",
            "baseName": "mediaType",
            "type": "string"
        },
        {
            "name": "documentId",
            "baseName": "documentId",
            "type": "string"
        },
        {
            "name": "fileFormat",
            "baseName": "fileFormat",
            "type": "BTImportForeignDataParams.FileFormatEnum"
        },
        {
            "name": "publicDocument",
            "baseName": "publicDocument",
            "type": "boolean"
        },
        {
            "name": "notifyUser",
            "baseName": "notifyUser",
            "type": "boolean"
        },
        {
            "name": "unit",
            "baseName": "unit",
            "type": "string"
        },
        {
            "name": "splitAssembliesIntoMultipleDocuments",
            "baseName": "splitAssembliesIntoMultipleDocuments",
            "type": "boolean"
        },
        {
            "name": "flattenAssemblies",
            "baseName": "flattenAssemblies",
            "type": "boolean"
        },
        {
            "name": "getyAxisIsUp",
            "baseName": "getyAxisIsUp",
            "type": "boolean"
        },
        {
            "name": "allowFaultyParts",
            "baseName": "allowFaultyParts",
            "type": "boolean"
        },
        {
            "name": "projectId",
            "baseName": "projectId",
            "type": "string"
        },
        {
            "name": "parentId",
            "baseName": "parentId",
            "type": "string"
        },
        {
            "name": "foreignId",
            "baseName": "foreignId",
            "type": "string"
        },
        {
            "name": "uploadId",
            "baseName": "uploadId",
            "type": "string"
        },
        {
            "name": "originalForeignId",
            "baseName": "originalForeignId",
            "type": "string"
        },
        {
            "name": "importWithinDocument",
            "baseName": "importWithinDocument",
            "type": "boolean"
        },
        {
            "name": "blobElementId",
            "baseName": "blobElementId",
            "type": "string"
        },
        {
            "name": "blobMicroversionId",
            "baseName": "blobMicroversionId",
            "type": "string"
        },
        {
            "name": "specifyUnits",
            "baseName": "specifyUnits",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return BTImportForeignDataParams.attributeTypeMap;
    }
}

export namespace BTImportForeignDataParams {
    export enum OwnerTypeEnum {
        USER = <any> 'USER',
        COMPANY = <any> 'COMPANY',
        ONSHAPE = <any> 'ONSHAPE'
    }
    export enum FileFormatEnum {
        ONSHAPEONSHAPE = <any> 'ONSHAPE_ONSHAPE',
        PARASOLIDXT = <any> 'PARASOLID_XT',
        PARASOLIDXB = <any> 'PARASOLID_XB',
        PARASOLIDXMTTXT = <any> 'PARASOLID_XMT_TXT',
        PARASOLIDXMTBIN = <any> 'PARASOLID_XMT_BIN',
        ACISSAT = <any> 'ACIS_SAT',
        STEPSTEP = <any> 'STEP_STEP',
        IGESIGES = <any> 'IGES_IGES',
        SOLIDWORKSSLDPRT = <any> 'SOLIDWORKS_SLDPRT',
        SOLIDWORKSSLDASM = <any> 'SOLIDWORKS_SLDASM',
        SOLIDWORKSZIP = <any> 'SOLIDWORKS_ZIP',
        INVENTORIPRT = <any> 'INVENTOR_IPRT',
        INVENTORIAM = <any> 'INVENTOR_IAM',
        PROEPRTORNX = <any> 'PROE_PRT_OR_NX',
        PROEASM = <any> 'PROE_ASM',
        SOLIDEDGEPAR = <any> 'SOLIDEDGE_PAR',
        CATIAV5CATPART = <any> 'CATIAV5_CATPART',
        CATIAV5CATPRODUCT = <any> 'CATIAV5_CATPRODUCT',
        JTJT = <any> 'JT_JT',
        COLLADADAE = <any> 'COLLADA_DAE',
        RHINO3DM = <any> 'RHINO_3DM',
        STLSTL = <any> 'STL_STL',
        OBJOBJ = <any> 'OBJ_OBJ'
    }
}
