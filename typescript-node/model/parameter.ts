/**
 * Onshape REST API
 * The Onshape REST API consumed by all clients.
 *
 * OpenAPI spec version: 1.96
 * Contact: api-support@onshape.zendesk.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BodyPartHeaders } from './bodyPartHeaders';
import { Example } from './example';
import { Schema } from './schema';

export class Parameter {
    'name'?: string;
    '_in'?: string;
    'description'?: string;
    'required'?: boolean;
    'deprecated'?: boolean;
    'allowEmptyValue'?: boolean;
    'get$ref'?: string;
    'style'?: Parameter.StyleEnum;
    'explode'?: boolean;
    'allowReserved'?: boolean;
    'schema'?: Schema;
    'examples'?: { [key: string]: Example; };
    'example'?: any;
    'content'?: BodyPartHeaders;
    'extensions'?: { [key: string]: any; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "_in",
            "baseName": "in",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "required",
            "baseName": "required",
            "type": "boolean"
        },
        {
            "name": "deprecated",
            "baseName": "deprecated",
            "type": "boolean"
        },
        {
            "name": "allowEmptyValue",
            "baseName": "allowEmptyValue",
            "type": "boolean"
        },
        {
            "name": "get$ref",
            "baseName": "get$ref",
            "type": "string"
        },
        {
            "name": "style",
            "baseName": "style",
            "type": "Parameter.StyleEnum"
        },
        {
            "name": "explode",
            "baseName": "explode",
            "type": "boolean"
        },
        {
            "name": "allowReserved",
            "baseName": "allowReserved",
            "type": "boolean"
        },
        {
            "name": "schema",
            "baseName": "schema",
            "type": "Schema"
        },
        {
            "name": "examples",
            "baseName": "examples",
            "type": "{ [key: string]: Example; }"
        },
        {
            "name": "example",
            "baseName": "example",
            "type": "any"
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "BodyPartHeaders"
        },
        {
            "name": "extensions",
            "baseName": "extensions",
            "type": "{ [key: string]: any; }"
        }    ];

    static getAttributeTypeMap() {
        return Parameter.attributeTypeMap;
    }
}

export namespace Parameter {
    export enum StyleEnum {
        Matrix = <any> 'matrix',
        Label = <any> 'label',
        Form = <any> 'form',
        Simple = <any> 'simple',
        SpaceDelimited = <any> 'spaceDelimited',
        PipeDelimited = <any> 'pipeDelimited',
        DeepObject = <any> 'deepObject'
    }
}
